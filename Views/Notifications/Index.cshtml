@model IEnumerable<OnlineBookExchange.ViewModels.NotificationsViewModel>

<h2>Notifications</h2>
<input type="hidden" id="currentUserId" value="@Session["UserID"]" />
<ul class="d-flex flex-column gap-3">
    @foreach (var notification in Model)
    {
        <li>
            <strong>User @notification.UserID </strong> - @notification.Message for <strong>Book @notification.BookID </strong> -  @notification.CreatedAt
            @if (notification.IsHandled ?? false)
             {
                 if(notification.Status == "Accepted")
                 {
                    <p>Accepted</p>
                 }
                 else if(notification.Status == "Declined")
                 {
                    <p>Declined</p>
                 }
             }
            else
            {
                <button class="btn btn-success" onclick="acceptRequest('@notification.NotificationID', '@notification.UserID', '@notification.BookID')">Accept</button>
                <button class="btn btn-danger" onclick="declineRequest('@notification.NotificationID', '@notification.UserID', '@notification.BookID')">Decline</button>
            }
        </li>
        <hr class="w-100" />
    }
</ul>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>

        function acceptRequest(notificationId, userId, bookId) {
            var currentUser;
            if (!currentUser || currentUser === "0") {
                currentUser = $("#currentUserId").val();
            }
            if (!currentUser) {
                console.error('UserID is null or 0!');
                return;
            }
            var notifications = {
                UserID: currentUser, // Sender ID
                ReceiverId: userId, // Receiver ID
                NotificationID: notificationId,
                BookID: bookId,
                Message: 'Your exchange request has been accepted.',
            };
            var acceptButton = $(`button[onclick="acceptRequest('${notificationId}', '${userId}', '${bookId}')"]`);
            acceptButton.prop('disabled', true);

            $.ajax({
                url: "/api/notifications/accept",
                method: "POST",
                data: JSON.stringify(notifications),
                contentType: 'application/json',
                success: function (response) {
                    toastr.success('Exchange request accepted.');
                    
                    var li = acceptButton.closest('li');
                    li.find('.btn-danger').hide();
                    li.append('<p>Exchange in Progress</p>');
                },
                error: function (error) {
                    toastr.error('Error accepting exchange request.');
                }
            });
        };

        function declineRequest(notificationId, userId, bookId) {
            var currentUser = $("#currentUserId").val();

            if (!currentUser || currentUser === "0") {
                console.error('UserID is null or 0!');
                return; 
            }

            var notifications = {
                UserID: currentUser, // Sender ID
                ReceiverId: userId, // Receiver ID
                NotificationID: notificationId,
                BookID: bookId,
                Message: 'Your exchange request has been declined.',
            };

            var button = $(`button[onclick="declineRequest(${notificationId}, ${userId}, ${bookId})"]`);
            button.prop('disabled', true);

            $.ajax({
                url: "/api/notifications/decline",
                method: "POST",
                data: JSON.stringify(notifications),
                contentType: 'application/json',
                success: function (response) {
                    toastr.success('Exchange request declined.');
                },
                error: function (error) {
                    toastr.error('Error declining exchange request.');
                }
            });
        };

    </script>
}