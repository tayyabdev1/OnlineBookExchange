@model IEnumerable<OnlineBookExchange.ViewModels.BooksViewModel>

@{
    ViewBag.Title = "MyBooks";
}

    <h2>My Books</h2>

        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Author</th>
                    <th>Genre</th>
                    <th>Condition</th>
                    <th>Status</th>
                    <th>Upload Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.Genre</td>
                        <td>@book.Condition</td>
                        <td>@book.Status</td>
                        <td>@book.AddedDate</td>
                        <td>
                            <button class="btn btn-warning" onclick="editBook(@book.BookID)">Edit</button>
                            <button class="btn btn-danger" onclick="deleteBook(@book.BookID)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Book</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editForm" method="post">
                        <input type="number" name="bookid" id="edit_bookid" hidden />

                        <div class="form-group">
                            <label for="title">Title</label>
                            <input type="text" class="form-control" id="edit_title" name="title" required placeholder="Enter Title">
                        </div>

                        <div class="form-group">
                            <label for="author">Author</label>
                            <input type="text" class="form-control" id="edit_author" name="author" required placeholder="Enter Author">
                        </div>

                        <div class="form-group">
                            <label for="genre">Genre</label>
                            <input type="text" class="form-control" id="edit_genre" name="genre" required placeholder="Enter Genre">
                        </div>
                        
                        <div class="form-group">
                            <label for="condition">Condition</label>
                            <input type="text" class="form-control" id="edit_condition" name="condition" required placeholder="Enter Condition">
                        </div>
                        
                        <div class="form-group">
                            <label for="status">Status</label>
                            <input type="text" class="form-control" id="edit_status" name="status" required placeholder="Enter Status">
                        </div>

                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/5.5.2/bootbox.min.js"></script>
    <script>

        function deleteBook(bookId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) { // Only proceed if user confirms
                    $.ajax({
                        url: "/api/Books/" + bookId,
                        method: "DELETE",
                        success: function (response) {
                            Swal.fire({
                                title: "Deleted!",
                                text: "Your book has been deleted.",
                                icon: "success"
                            }).then(() => {
                                location.reload(); // Reload page after confirmation
                            });
                        },
                        error: function () {
                            toastr.error("Please try again.");
                        }
                    });
                }
            });
        }


        function editBook(id) {
            console.log("Fetching data for Book ID:", id);
            $.ajax({
                url: "/api/books/" + id,
                method: "GET",
                success: function (data) {
                    $("#edit_bookid").val(id);
                    $("#edit_title").val(data.title);
                    $("#edit_author").val(data.author);
                    $("#edit_genre").val(data.genre);
                    $("#edit_condition").val(data.condition);
                    $("#edit_status").val(data.status);

                    $('#editModal').modal('show');
                },
                error: function () {
                    toastr.error("Please Try Again");
                }
            });
        }

        $("#editForm").validate({
            submitHandler: function () {
                var vm = {
                    Books: {
                        bookid: $("#edit_bookid").val(),
                        Title: $("#edit_title").val(),
                        Author: $("#edit_author").val(),
                        Genre: $("#edit_genre").val(),
                        Condition: $("#edit_condition").val(),
                        Status: $("#edit_status").val(),
                    }
                };

                $.ajax({
                    url: "/api/books/",
                    method: "PUT",
                    data: vm, // Serialize the data to JSON
                    success: function () {
                        toastr.success("Updated Successfully");
                        $("#editForm")[0].reset();
                        $('#editModal').modal('hide');
                        location.reload(null, false);
                    },
                    error: function () {
                        toastr.error("Please Try Again");
                    }
                });
                console.log(vm);
            }
        });

    </script>
}


