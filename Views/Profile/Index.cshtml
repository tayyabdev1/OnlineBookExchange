@model OnlineBookExchange.ViewModels.UserViewModel

@{
    ViewBag.Title = "Index";
}

<div class="container my-2">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <div class="mx-auto shadow-lg d-flex flex-column flex-md-row gap-3 bg-body text-start border-2 my-4 p-3 rounded"
         id="user-profile" style="background-color: #f4f4f4; max-width: 600px;">

        <!-- Profile Picture -->
        <div class="profile-header d-flex justify-content-center align-items-center">
            @if (!string.IsNullOrEmpty(Model?.ProfilePicture))
            {
                <img class="rounded-circle border" src="@Model.ProfilePicture" alt="Profile Picture" width="100" height="100" />
            }
            else
            {
                <p class="text-muted">No Profile Picture</p>
            }
        </div>

        <!-- Profile Details -->
        <div class="p-3 flex-grow-1">
            <p class="text-secondary fw-medium">ID</p>
            <strong>@Model.UserID</strong>
            <hr class="w-50" />
            <p class="text-secondary fw-medium">Name</p>
            <strong>@Model.Username</strong>
            <hr class="w-50" />
            <p class="text-secondary fw-medium">Email</p>
            <strong>@Model.Email</strong>
            <hr class="w-50" />
            <p class="text-secondary fw-medium">Address</p>
            <strong>@Model.Address</strong>
            <hr class="w-50" />
            <p class="text-secondary fw-medium">Joined</p>
            <strong>@Model.CreatedAt</strong>
        </div>
    </div>

    <button type="button" class="btn btn-primary" onclick="editUser(@Model.UserID)">Edit Profile</button>
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm" method="post">
                        <input type="number" name="userid" id="edit_userid" hidden />

                        <div class="form-group">
                            <label for="username">UserName</label>
                            <input type="text" class="form-control" id="edit_username" name="username" required placeholder="Enter UserName">
                        </div>

                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="text" class="form-control" id="edit_email" name="email" required placeholder="Enter Email">
                        </div>

                        <div class="form-group">
                            <input type="hidden" id="edit_password" name="password">
                        </div>

                        <div class="form-group">
                            <label for="contact">Contact No</label>
                            <input type="text" class="form-control" id="edit_contact" name="contact" placeholder="Enter Contact">
                        </div>

                        <div class="form-group">
                            <label for="address">Address</label>
                            <input type="text" class="form-control" id="edit_address" name="address" required placeholder="Enter Address">
                        </div>

                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <a href="@Url.Action("MyBooks", "Profile")" class="btn btn-warning">My Books</a>

    <!-- Report Issue -->
    <button id="reportissue" type="button" class="btn btn-danger" onclick="showReportModal(@Model.UserID)">Report Issue</button>

    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Report Issue</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addForm" method="post">
                        <div class="form-group">
                            <label for="reporterid">Reporter ID</label>
                            <input type="text" class="form-control" id="reporterid" name="ReporterID" value="@Model.UserID" readonly>
                        </div>
                        <div class="form-group">
                            <label for="subject">Subject</label>
                            <input type="text" class="form-control" id="subject" name="Subject" placeholder="Enter Subject" required>
                        </div>
                        <div class="form-group">
                            <label for="bookid">Book ID</label>
                            <input type="text" class="form-control" id="bookid" name="BookID" placeholder="Optional">
                        </div>
                        <div class="form-group">
                            <label for="userid">User ID</label>
                            <input type="text" class="form-control" id="userid" name="UserID" placeholder="Optional">
                        </div>
                        <div class="form-group">
                            <label for="description">Description</label>
                            <textarea class="form-control" id="description" name="Description" rows="3" placeholder="Enter Description" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal">
        Change Password
    </button>
    <form class="d-flex flex-column" asp-action="UploadProfilePicture" asp-controller="User" enctype="multipart/form-data" method="post">
        <input type="hidden" id="UserID" name="UserID" value="@Model.UserID" />
        <input class="m-3" type="file" id="profilePictureInput" />
        <button type="button" class="uploadbutton border-0 w-25 rounded-3 fw-medium" onclick="uploadProfilePicture()">Upload</button>
        <p style="font-size: 10px;" class="p-2"><span>&#9888;</span> Kindly crop the image to square before upload</p>
    </form>

    
    <!-- Reset Password -->
    <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="changePasswordForm">
                        <input type="hidden" class="form-control" id="username" value="@User.Identity.Name" required />
                        <input type="hidden" id="UserID" name="UserID" value="@Model.UserID" required />
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <input type="password" class="form-control" id="currentPassword" required />
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="newPassword" required />
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" required />
                        </div>
                        <button type="submit" class="btn btn-success">Update Password</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <p class="text-muted">For any queries contact tmirza217@gmail.com</p>
</div>


<style>

    .uploadbutton:hover {
        background-color: #dedede;
    }
    .profile-heading-text p {
        font-size: 13px;
    }
    .profile-header{
        padding: 9%;
    }

    .mx-auto {
        border-radius: 20px;
    }

    .btn {
        margin: 1%;
        border: none;
        background: none;
        color: gray;
        font-weight: 700;
    }
</style>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>

        function fetchUserProfile(userId) {
            $.ajax({
                url: 'api/profile/' + userId,
                method: 'GET',
                datatype: 'json',
                success: function (data) {
                    if (data.userId) {
                        $('#userid').val('');
                        $('#username').val('');
                        $('#email').val('');
                        $('#contact').val('');
                        $('#address').val('');
                        $('#createdAt').val('');
                    } else {
                        alert('User not found');
                    }
                },
                error: function (error) {
                    // Handle errors gracefully,
                    console.error('Error fetching User:', error);
                    alert('An error occurred while fetching User.');
                }
            });
        }


        // Upload Profile Picture
        function uploadProfilePicture() {
            var fileInput = document.getElementById('profilePictureInput');
            var file = fileInput.files[0];
            var userId = document.getElementById("UserID").value;

            if (!file) {
                alert("Please select an image.");
                return;
            }

            var formData = new FormData();
            formData.append("imageFile", file);
            formData.append("UserID", userId); // Replace with dynamic user ID

            $.ajax({
                url: '/api/profile/UploadProfilePicture',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    toastr.success("Profile picture updated successfully!");
                    $("#profileImage").attr("src", response.ProfilePicture + "?t=" + new Date().getTime());
                },
                error: function () {
                    toastr.error("Error uploading profile picture.");
                }
            });
        }


        //Edit User
        function editUser(id) {
            console.log("Fetching data for User:", id);
            $.ajax({
                url: "/api/profile/" + id,
                method: "GET",
                success: function (data) {
                    $("#reporterid").val(reporterid);
                    $("#edit_username").val(data.username);
                    $("#edit_email").val(data.email);
                    $("#edit_password").val(data.password);
                    $("#edit_contact").val(data.contact);
                    $("#edit_address").val(data.address);

                    $('#editModal').modal('show');
                },
                error: function () {
                    toastr.error("Please Try Again");
                }
            });
        }

        $("#editForm").validate({
            submitHandler: function () {
                var vm = {
                    userid: $("#edit_userid").val(),
                    username: $("#edit_username").val(),
                    email: $("#edit_email").val(),
                    password: $("#edit_password").val(),
                    contact: $("#edit_contact").val(),
                    address: $("#edit_address").val(),
                };

                $.ajax({
                    url: "/api/profile/",
                    method: "PUT",
                    data: vm, 
                    success: function () {
                        toastr.success("Updated Successfully");
                        $("#editForm")[0].reset();
                        $('#editModal').modal('hide');
                        location.reload(null, false);
                    },
                    error: function () {
                        toastr.error("Please Try Again");
                    }
                });
                console.log(vm);
            }
        });

        // Report Issue
        function showReportModal(userId) {
            $('#reporterid').val(userId); // Set Reporter ID dynamically
            $('#addModal').modal('show');
        }

        $(document).ready(function () {
            // Form validation and submission
            $("#addForm").validate({
                rules: {
                    Subject: {
                        required: true,
                        minlength: 3
                    },
                    Description: {
                        required: true,
                        minlength: 5
                    }
                },
                messages: {
                    Subject: {
                        required: "Please enter a subject",
                        minlength: "Subject must be at least 3 characters long"
                    },
                    Description: {
                        required: "Please enter a description",
                        minlength: "Description must be at least 5 characters long"
                    }
                },
                submitHandler: function () {
                    var formData = $("#addForm").serialize();

                    $.ajax({
                        url: "/api/reportIssue/create",
                        method: "POST",
                        data: formData,
                        success: function () {
                            toastr.success("Issue reported successfully!");
                            $("#addForm")[0].reset(); // Reset the form
                            $('#addModal').modal('hide'); // Hide the modal
                        },
                        error: function (xhr) {
                            console.error("Error:", xhr.responseText);
                            toastr.error("Failed to report the issue. Please try again.");
                        }
                    });
                }
            });
        });


        $(document).ready(function () {
            $("#changePasswordForm").submit(function (event) {
                event.preventDefault();


                var password = $("#newPassword").val();
                var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/;

                if (typeof password !== "string" || !passwordRegex.test(password)) {
                    Swal.fire({
                        title: "Error",
                        text: "Password must be at least 8 characters long, including an uppercase letter, a lowercase letter, a number, and a special character.",
                        icon: "error"
                    });
                    return;
                }

                var data = {
                    UserID: $("#UserID").val(),
                    CurrentPassword: $("#currentPassword").val(),
                    NewPassword: $("#newPassword").val(),
                    ConfirmPassword: $("#confirmPassword").val()
                };

                $.ajax({
                    url: "/api/ChangePassword", // Change Password method in ForgotPass Controller
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    success: function (response) {
                        Swal.fire({
                            title: "Success",
                            text: "Your password has been changed successfully!",
                            icon: "success"
                        });
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: "Error",
                            text: xhr.responseText,
                            icon: "error"
                        });
                    }
                });
            });
        });

    </script>
}
